<%
remote_url = {:controller => 'chat', :action => 'say', :id => @channel}

loading_command = %(
  msg = '<div class="message" id="tmp_msg">' + time_and_name + '<span class="content">' + $('entryfield').value + '</span></div>';
  $('entryfield').value = ''; 
  $('entryfield').focus;
  new Insertion.Bottom('stage', msg);
  $('conversation').scrollTop = $('conversation').scrollHeight + $('conversation').clientHeight; )

complete = "eval(request.responseText)"
%>

<% content_for :style do %>
  @import url(/stylesheets/chat.css);
<% end %>

<div id="userlist">
  <%= render :partial => 'chat/userlist' %>
</div>

<div id="conversation">
  <div id="stage">
    <% for message in @messages -%>
    <%= message_content(message) %>
    <% end -%>
  </div>
</div>

<%= javascript_tag scroll_conversation_script %>
<%= javascript_tag set_time_and_name_script %>

<% form_remote_tag(:url => remote_url, :loading => loading_command, :complete => complete) do %>
<table id="typebox" cellpadding='0' cellspacing='0'>
<tr>
  <td width="1%" id='handle'><%= current_user.login %></td>
  <td width="99%">
    <% default_text = "Type your messages here and press enter..."[:type_your_messages_here] -%>
    <textarea id="entryfield" name="message" rows="2"
      onkeypress="if (enterPressed(event)) {document.forms[0].onsubmit();}"
      onclick="if (this.value == '<%=default_text%>') {this.clear();}"><%= default_text %></textarea>
    <input type="submit" value="Say" style="display: none;" />
  </td>
</tr>
</table>
<% end -%>

<p>
<% form_tag(:action => :leave_channel, :id => @channel) do %>
  <input type='submit' value='<%= "Leave channel"[:leave_channel] %>' />
<% end %>
</p>

<p>
<%= link_to "This channel archive"[:chat_archive], {:action => :archive, :id => @channel.name} %>
</p>

<%= # update the user list
wait_time = 4
periodically_call_remote(:url => { :controller => 'chat',
			      	   :action => 'user_list',
				   :id => @channel},
			 :frequency => wait_time,
			 :update => 'userlist')

%>

<%= # poll server every wait_time seconds for new messages
wait_time = 3
periodically_call_remote :url => { :controller => 'chat',
                                   :action => 'poll_channel_for_updates',
                                   :id => @channel},
                         :frequency => wait_time,
                         :complete => "eval(request.responseText)"
#                         :update => 'userlist'
%>

<%= # update server if user has been typing
wait_time = 6
observe_field(:entryfield,
              :frequency => wait_time,
              :url => { :controller => 'chat',
                        :action => 'user_is_typing',
                        :id => @channel })
%>
